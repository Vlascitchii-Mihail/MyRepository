<?xml version="1.0" encoding="utf-8" ?>

<layout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto">

<!--    GameViewModel's object-->
    <data>
        <variable
            name="vm"
            type="com.bignerdranch.android.pennydrop.viewmodels.GameViewModel" />
    </data>

<!--    android:animateLayoutChanges="true" add animation
tools:context="fragments.GameFragment" tell to Android Studio that Constraint Layout
associated with  GameFragment-->
<androidx.constraintlayout.widget.ConstraintLayout
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:animateLayoutChanges="true"
    tools:context="fragments.GameFragment">

<!--    android:baselineAligned - increase productivity. false - increase the
speed of LinearLayout's rendering
Если задано значение false, не позволяет
макету выравнивать базовые линии своих дочерних элементов. Этот атрибут
особенно полезен, когда дети используют разные значения гравитации.
Значение по умолчанию верно.-->
    <LinearLayout
        android:id="@+id/layoutCoinSlot"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_marginTop="15dp"
        android:layout_marginBottom="5dp"
        android:baselineAligned="false"
        android:gravity="center"
        android:orientation="horizontal"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toTopOf="parent" >

<!--        adding coins-->
        <include
            android:id="@+id/coinSlot1"
            layout="@layout/layout_coin_slot"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            app:slot="@{vm.slots[0]}" />

        <include
            android:id="@+id/coinSlot2"
            layout="@layout/layout_coin_slot"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            app:slot="@{vm.slots[1]}" />

        <include
            android:id="@+id/coinSlot3"
            layout="@layout/layout_coin_slot"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            app:slot="@{vm.slots[2]}" />

        <include
            android:id="@+id/coinSlot4"
            layout="@layout/layout_coin_slot"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            app:slot="@{vm.slots[3]}" />

        <include
            android:id="@+id/coinSlot5"
            layout="@layout/layout_coin_slot"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            app:slot="@{vm.slots[4]}" />

    </LinearLayout>

    <include
        android:id="@+id/coinSlot6"
        layout="@layout/layout_coin_slot"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toBottomOf="@id/layoutCoinSlot"
        app:slot="@{vm.slots[5]}" />

<!--    ?? @string/na - reserve string resource-->
    <TextView
        android:id="@+id/CurrentPlayerName"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_marginStart="32dp"
        android:text='@{vm.currentPlayer.playerName ?? @string/na}'
        android:textSize="32sp"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintBottom_toBottomOf="@id/textCoinsLeft"
        app:layout_constraintTop_toTopOf="@id/textCurrentPlayerCoinsLeft"
        tools:text="Michael"
        tools:ignore="HardcodedText" />

    <TextView
        android:id="@+id/textCurrentPlayerCoinsLeft"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:gravity="center"
        android:text="7"
        android:textSize="24sp"
        tools:text='@{vm.currentPlayer.pennies+ ""}'
        app:layout_constraintEnd_toEndOf="@id/textCoinsLeft"
        app:layout_constraintStart_toStartOf="@id/textCoinsLeft"
        app:layout_constraintTop_toBottomOf="@id/coinSlot6"
        tools:ignore="HardcodedText" />

    <TextView
        android:id="@+id/textCoinsLeft"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginEnd="32dp"
        android:text="@string/coins_left"
        android:textSize="12sp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toBottomOf="@id/textCurrentPlayerCoinsLeft"
        tools:ignore="HardcodedText" />

    <LinearLayout
        android:id="@+id/layoutButtons"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_margin="16dp"
        android:orientation="horizontal"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toBottomOf="@id/textCoinsLeft">

<!--android:layout_weight - относительное соотношение размеров для каждого комронента
android:drawableTint - Оттенок для составных (слева, сверху и т. д.) рисунков.
android:onClick - Name of the method in this View's context to invoke when the view is clicked.

android:drawableTint="?android:attr/textColorPrimaryInverse" - Primary
inverse text color, useful for inverted backgrounds

android:background="@{vm.canRoll ? @color/colorPrimary2 : @color/plainGray}"

android:drawableTint="?android:attr/textColorPrimaryInverse"
android:textColor="?android:attr/textColorPrimaryInverse"  - change the color to reverse color
        if we change color mode-->
        <Button
            android:layout_width="0dp"
            android:layout_weight="3"
            android:layout_height="wrap_content"
            android:drawableEnd="@drawable/dice_6"
            android:padding="10dp"
            android:text="@string/roll"
            android:background="@color/roll_button_color"
            android:enabled="@{vm.canRoll}"
            android:onClick="@{() -> vm.roll()}"
            android:drawableTint="?android:attr/textColorPrimaryInverse"
            android:textColor="?android:attr/textColorPrimaryInverse"
            />

        <TextView
            android:layout_width="wrap_content"
            android:layout_weight="1"
            android:layout_height="match_parent"
            android:gravity="center"
            android:text="@string/or"
            android:textSize="24sp"/>

<!--android:drawableTint - Оттенок для составных (слева, сверху и т. д.) рисунков.

android:drawableTint="?android:attr/textColorPrimaryInverse" - Primary
inverse text color, useful for inverted backgrounds

android:background="@{vm.canPass ? @color/colorPrimary2 : @color/plainGray}"

android:drawableTint="?android:attr/textColorPrimaryInverse"
android:textColor="?android:attr/textColorPrimaryInverse"  - change the color to reverse color
        if we change color mode-->
        <Button
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="3"
            android:drawableEnd="@drawable/ic_baseline_arrow_forward_24"
            android:padding="10dp"
            android:text="@string/pass"
            android:background="@color/pass_button_color"
            android:enabled="@{vm.canPass}"
            android:onClick="@{() -> vm.pass()}"
            android:drawableTint="?android:attr/textColorPrimaryInverse"
            android:textColor="?android:attr/textColorPrimaryInverse"
            />

    </LinearLayout>

<!--android:scrollbars="vertical" - vertical scroll bars to our text box-->
    <TextView
        android:id="@+id/textCurrentTurnInfo"
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:layout_margin="16dp"
        android:scrollbars="vertical"
        android:text="@{vm.currentGame.game.currentTurnText}"
        app:layout_constraintBottom_toTopOf="@id/textCurrentStandingsInfo"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/layoutButtons"
        app:layout_constraintVertical_bias="0.437"
        tools:text="Michael rolled a 4.\nMichael rolled a 5!" />

    <TextView
        android:id="@+id/textCurrentStandingsInfo"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_marginStart="16dp"
        android:layout_marginEnd="16dp"
        android:layout_marginBottom="16dp"
        android:text="@{vm.currentStandingsText}"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.0"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/textCurrentStandingsInfo"
        app:layout_constraintVertical_bias="1.0"
        tools:text="Current Scores: \t\nHazel: 4 coins \t\nMichael: 7 coins" />

</androidx.constraintlayout.widget.ConstraintLayout>

</layout>